/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package UI;

import Application.Controller.Simulation;
import Domain.Client.ClientProfile;
import javax.swing.JOptionPane;

/**
 *
 * @author Élise
 */
public class StatisticsSimulation extends javax.swing.JFrame {
    Simulation controller;
    /**
     * Creates new form StatisticsSimulation
     */
    public StatisticsSimulation(Simulation _controller) {
        controller = _controller;
        initComponents();
        setDefaultCloseOperation(javax.swing.JFrame.DISPOSE_ON_CLOSE);
    }
    

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    private void initComponents() {

        lblTitle = new javax.swing.JLabel();
        lblTimeStart = new javax.swing.JLabel();
        lblTimeEnd = new javax.swing.JLabel();
        lblClientProfile = new javax.swing.JLabel();
        cmbClientProfile = new javax.swing.JComboBox();
        lblDay = new javax.swing.JLabel();
        cmbDay = new javax.swing.JComboBox();
        lblNbClient = new javax.swing.JLabel();
        lblSimulationStartTime = new javax.swing.JLabel();
        lblSimulationEndTime = new javax.swing.JLabel();
        lblSimulationNbClient = new javax.swing.JLabel();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        lblMinPassageDuration = new javax.swing.JLabel();
        lblAveragePassageDuration = new javax.swing.JLabel();
        lblMaxPassageDuration = new javax.swing.JLabel();
        btnOk = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        lblTitle.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        lblTitle.setText("Statistiques de la simulation");

        lblTimeStart.setText("Heure de début:");

        lblTimeEnd.setText("Heure de fin:");

        lblClientProfile.setText("Profil client: ");

        cmbClientProfile.setModel(new javax.swing.DefaultComboBoxModel());
        for(int i = 0; i < controller.getListClientProfile().size(); i++)
        {
            cmbClientProfile.addItem(controller.getListClientProfile().get(i).getName());
        }
        cmbClientProfile.addActionListener (new java.awt.event.ActionListener () 
        {
            public void actionPerformed(java.awt.event.ActionEvent evt) 
            {
                String value = StatisticsSimulation.this.cmbClientProfile.getSelectedItem().toString();
                ClientProfile profile = new ClientProfile();
                for(int i = 0; i < StatisticsSimulation.this.controller.getListClientProfile().size(); i++)
                {
                    if(StatisticsSimulation.this.controller.getListClientProfile().get(i).getName().equalsIgnoreCase(value))
                    {
                        profile = StatisticsSimulation.this.controller.getListClientProfile().get(i);
                        break;
                    }
                }
                String day = StatisticsSimulation.this.cmbDay.getSelectedItem().toString();
                int dayInt = Integer.parseInt(day);
                
                lblMinPassageDuration.setText(profile.getMinPassageDuration(dayInt).getTimeStringNoSecond());

                lblAveragePassageDuration.setText(profile.getAveragePassageDuration(dayInt).getTimeStringNoSecond());

                lblMaxPassageDuration.setText(profile.getMaxPassageDuration(dayInt).getTimeStringNoSecond());
                
                lblSimulationNbClient.setText("" + profile.getRecordedClientAmount(dayInt));
            }
        });
        lblDay.setText("Jour:");

        cmbDay.setModel(new javax.swing.DefaultComboBoxModel());
        for(int i = 0; i < controller.getEndTime().getDay(); i++)
        {
            cmbDay.addItem(i);
        }
        cmbDay.addActionListener (new java.awt.event.ActionListener () 
        {
            public void actionPerformed(java.awt.event.ActionEvent evt) 
            {
                String value = StatisticsSimulation.this.cmbClientProfile.getSelectedItem().toString();
                ClientProfile profile = new ClientProfile();
                for(int i = 0; i < StatisticsSimulation.this.controller.getListClientProfile().size(); i++)
                {
                    if(StatisticsSimulation.this.controller.getListClientProfile().get(i).getName().equalsIgnoreCase(value))
                    {
                        profile = StatisticsSimulation.this.controller.getListClientProfile().get(i);
                        break;
                    }
                }
                String day = StatisticsSimulation.this.cmbDay.getSelectedItem().toString();
                int dayInt = Integer.parseInt(day);
                
                lblMinPassageDuration.setText(profile.getMinPassageDuration(dayInt).getTimeStringNoSecond());

                lblAveragePassageDuration.setText(profile.getAveragePassageDuration(dayInt).getTimeStringNoSecond());

                lblMaxPassageDuration.setText(profile.getMaxPassageDuration(dayInt).getTimeStringNoSecond());
                
                lblSimulationNbClient.setText("" + profile.getRecordedClientAmount(dayInt));
            }
        });
        String value = StatisticsSimulation.this.cmbClientProfile.getSelectedItem().toString();
        ClientProfile profile = new ClientProfile();
        for(int i = 0; i < StatisticsSimulation.this.controller.getListClientProfile().size(); i++)
        {
            if(StatisticsSimulation.this.controller.getListClientProfile().get(i).getName().equalsIgnoreCase(value))
            {
                profile = StatisticsSimulation.this.controller.getListClientProfile().get(i);
                break;
            }
        }
        String day = StatisticsSimulation.this.cmbDay.getSelectedItem().toString();
        int dayInt = Integer.parseInt(day);

        lblMinPassageDuration.setText(profile.getMinPassageDuration(dayInt).getTimeStringNoSecond());

        lblAveragePassageDuration.setText(profile.getAveragePassageDuration(dayInt).getTimeStringNoSecond());

        lblMaxPassageDuration.setText(profile.getMaxPassageDuration(dayInt).getTimeStringNoSecond());

        lblSimulationNbClient.setText("" + profile.getRecordedClientAmount(dayInt));

        lblNbClient.setText("Nombre de client:");

        lblSimulationStartTime.setText(controller.getStartTime().getTimeStringNoSecond());

        lblSimulationEndTime.setText(controller.getEndTime().getTimeStringNoSecond());

        jLabel1.setText("Durée de passage minimum:");

        jLabel2.setText("Durée de passage moyen:");

        jLabel3.setText("Durée de passage maximum:");
        
        btnOk.setText("Ok");
        btnOk.setName("btnOk"); // NOI18N
         btnOk.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnOkActionPerformed(evt);
            }
        });
        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(btnOk)
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addGroup(layout.createSequentialGroup()
                            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                .addComponent(jLabel1)
                                .addComponent(jLabel2))
                            .addGap(22, 22, 22)
                            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                .addComponent(lblAveragePassageDuration)
                                .addComponent(lblMinPassageDuration)))
                        .addGroup(layout.createSequentialGroup()
                            .addComponent(jLabel3)
                            .addGap(18, 18, 18)
                            .addComponent(lblMaxPassageDuration))
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                            .addGroup(javax.swing.GroupLayout.Alignment.LEADING, layout.createSequentialGroup()
                                .addComponent(lblTimeEnd)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(lblSimulationEndTime))
                            .addGroup(javax.swing.GroupLayout.Alignment.LEADING, layout.createSequentialGroup()
                                .addComponent(lblDay)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(cmbDay, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(javax.swing.GroupLayout.Alignment.LEADING, layout.createSequentialGroup()
                                .addComponent(lblClientProfile)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(cmbClientProfile, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(javax.swing.GroupLayout.Alignment.LEADING, layout.createSequentialGroup()
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(lblNbClient)
                                    .addComponent(lblTimeStart))
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                    .addGroup(layout.createSequentialGroup()
                                        .addGap(68, 68, 68)
                                        .addComponent(lblSimulationNbClient))
                                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                        .addComponent(lblSimulationStartTime)))))))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap(46, Short.MAX_VALUE)
                .addComponent(lblTitle)
                .addGap(38, 38, 38))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(31, 31, 31)
                .addComponent(lblTitle)
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lblTimeStart)
                    .addComponent(lblSimulationStartTime))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lblTimeEnd)
                    .addComponent(lblSimulationEndTime))
                .addGap(17, 17, 17)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lblDay)
                    .addComponent(cmbDay, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lblClientProfile)
                    .addComponent(cmbClientProfile, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lblNbClient)
                    .addComponent(lblSimulationNbClient))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel1)
                    .addComponent(lblMinPassageDuration))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel2)
                    .addComponent(lblAveragePassageDuration))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel3)
                    .addComponent(lblMaxPassageDuration))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 18, Short.MAX_VALUE)
                .addComponent(btnOk)
                .addContainerGap())
        );

        pack();
    }
    private void btnOkActionPerformed(java.awt.event.ActionEvent evt)
    {
        dispose();
    }

    private javax.swing.JComboBox cmbClientProfile;
    private javax.swing.JComboBox cmbDay;
    private javax.swing.JButton btnOk;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel lblAveragePassageDuration;
    private javax.swing.JLabel lblClientProfile;
    private javax.swing.JLabel lblDay;
    private javax.swing.JLabel lblMaxPassageDuration;
    private javax.swing.JLabel lblMinPassageDuration;
    private javax.swing.JLabel lblNbClient;
    private javax.swing.JLabel lblSimulationEndTime;
    private javax.swing.JLabel lblSimulationNbClient;
    private javax.swing.JLabel lblSimulationStartTime;
    private javax.swing.JLabel lblTimeEnd;
    private javax.swing.JLabel lblTimeStart;
    private javax.swing.JLabel lblTitle;
}
